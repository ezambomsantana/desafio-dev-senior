package br.com.maplink2.webservices;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.4.6
 * 2013-11-06T22:59:36.404-02:00
 * Generated source version: 2.4.6
 * 
 */
@WebService(targetNamespace = "http://webservices.maplink2.com.br", name = "AddressFinderSoap")
@XmlSeeAlso({ObjectFactory.class})
public interface AddressFinderSoap {

    /**
     * Devolve uma lista contendo POI candidatos.
     */
    @WebResult(name = "findPOIResult", targetNamespace = "http://webservices.maplink2.com.br")
    @RequestWrapper(localName = "findPOI", targetNamespace = "http://webservices.maplink2.com.br", className = "br.com.maplink2.webservices.FindPOI")
    @WebMethod(action = "http://webservices.maplink2.com.br/findPOI")
    @ResponseWrapper(localName = "findPOIResponse", targetNamespace = "http://webservices.maplink2.com.br", className = "br.com.maplink2.webservices.FindPOIResponse")
    public br.com.maplink2.webservices.POIInfo findPOI(
        @WebParam(name = "name", targetNamespace = "http://webservices.maplink2.com.br")
        java.lang.String name,
        @WebParam(name = "city", targetNamespace = "http://webservices.maplink2.com.br")
        br.com.maplink2.webservices.City city,
        @WebParam(name = "resultRange", targetNamespace = "http://webservices.maplink2.com.br")
        br.com.maplink2.webservices.ResultRange resultRange,
        @WebParam(name = "token", targetNamespace = "http://webservices.maplink2.com.br")
        java.lang.String token
    );

    /**
     * Devolve os cruzamentos de uma coordenada
     */
    @WebResult(name = "GetCrossStreetAddressResult", targetNamespace = "http://webservices.maplink2.com.br")
    @RequestWrapper(localName = "GetCrossStreetAddress", targetNamespace = "http://webservices.maplink2.com.br", className = "br.com.maplink2.webservices.GetCrossStreetAddress")
    @WebMethod(operationName = "GetCrossStreetAddress", action = "http://webservices.maplink2.com.br/GetCrossStreetAddress")
    @ResponseWrapper(localName = "GetCrossStreetAddressResponse", targetNamespace = "http://webservices.maplink2.com.br", className = "br.com.maplink2.webservices.GetCrossStreetAddressResponse")
    public br.com.maplink2.webservices.ArrayOfAddressLocation getCrossStreetAddress(
        @WebParam(name = "point", targetNamespace = "http://webservices.maplink2.com.br")
        br.com.maplink2.webservices.Point point,
        @WebParam(name = "token", targetNamespace = "http://webservices.maplink2.com.br")
        java.lang.String token
    );

    /**
     * Devolve a a coordenada do ponto informado e a URL do mapa.
     */
    @WebResult(name = "getXYRadiusWithMapResult", targetNamespace = "http://webservices.maplink2.com.br")
    @RequestWrapper(localName = "getXYRadiusWithMap", targetNamespace = "http://webservices.maplink2.com.br", className = "br.com.maplink2.webservices.GetXYRadiusWithMap")
    @WebMethod(action = "http://webservices.maplink2.com.br/getXYRadiusWithMap")
    @ResponseWrapper(localName = "getXYRadiusWithMapResponse", targetNamespace = "http://webservices.maplink2.com.br", className = "br.com.maplink2.webservices.GetXYRadiusWithMapResponse")
    public br.com.maplink2.webservices.MapInfo getXYRadiusWithMap(
        @WebParam(name = "address", targetNamespace = "http://webservices.maplink2.com.br")
        br.com.maplink2.webservices.Address address,
        @WebParam(name = "mo", targetNamespace = "http://webservices.maplink2.com.br")
        br.com.maplink2.webservices.MapOptions mo,
        @WebParam(name = "radius", targetNamespace = "http://webservices.maplink2.com.br")
        int radius,
        @WebParam(name = "token", targetNamespace = "http://webservices.maplink2.com.br")
        java.lang.String token
    );

    /**
     * Devolve o endereço do ponto informado.
     */
    @WebResult(name = "getAddressResult", targetNamespace = "http://webservices.maplink2.com.br")
    @RequestWrapper(localName = "getAddress", targetNamespace = "http://webservices.maplink2.com.br", className = "br.com.maplink2.webservices.GetAddress")
    @WebMethod(action = "http://webservices.maplink2.com.br/getAddress")
    @ResponseWrapper(localName = "getAddressResponse", targetNamespace = "http://webservices.maplink2.com.br", className = "br.com.maplink2.webservices.GetAddressResponse")
    public br.com.maplink2.webservices.AddressLocation getAddress(
        @WebParam(name = "point", targetNamespace = "http://webservices.maplink2.com.br")
        br.com.maplink2.webservices.Point point,
        @WebParam(name = "token", targetNamespace = "http://webservices.maplink2.com.br")
        java.lang.String token,
        @WebParam(name = "tolerance", targetNamespace = "http://webservices.maplink2.com.br")
        double tolerance
    );

    /**
     * Devolve a coordenada de um cruzamento
     */
    @WebResult(name = "GetCrossStreetXYResult", targetNamespace = "http://webservices.maplink2.com.br")
    @RequestWrapper(localName = "GetCrossStreetXY", targetNamespace = "http://webservices.maplink2.com.br", className = "br.com.maplink2.webservices.GetCrossStreetXY")
    @WebMethod(operationName = "GetCrossStreetXY", action = "http://webservices.maplink2.com.br/GetCrossStreetXY")
    @ResponseWrapper(localName = "GetCrossStreetXYResponse", targetNamespace = "http://webservices.maplink2.com.br", className = "br.com.maplink2.webservices.GetCrossStreetXYResponse")
    public br.com.maplink2.webservices.ArrayOfCrossStreetLocation getCrossStreetXY(
        @WebParam(name = "cidade", targetNamespace = "http://webservices.maplink2.com.br")
        br.com.maplink2.webservices.City cidade,
        @WebParam(name = "firstStreet", targetNamespace = "http://webservices.maplink2.com.br")
        java.lang.String firstStreet,
        @WebParam(name = "secondStreet", targetNamespace = "http://webservices.maplink2.com.br")
        java.lang.String secondStreet,
        @WebParam(name = "token", targetNamespace = "http://webservices.maplink2.com.br")
        java.lang.String token
    );

    /**
     * Devolve a coordenada do endereço informado.
     */
    @WebResult(name = "getXYResult", targetNamespace = "http://webservices.maplink2.com.br")
    @RequestWrapper(localName = "getXY", targetNamespace = "http://webservices.maplink2.com.br", className = "br.com.maplink2.webservices.GetXY")
    @WebMethod(action = "http://webservices.maplink2.com.br/getXY")
    @ResponseWrapper(localName = "getXYResponse", targetNamespace = "http://webservices.maplink2.com.br", className = "br.com.maplink2.webservices.GetXYResponse")
    public br.com.maplink2.webservices.Point getXY(
        @WebParam(name = "address", targetNamespace = "http://webservices.maplink2.com.br")
        br.com.maplink2.webservices.Address address,
        @WebParam(name = "token", targetNamespace = "http://webservices.maplink2.com.br")
        java.lang.String token
    );

    /**
     * Devolve uma lista contendo endereços candidatos.
     */
    @WebResult(name = "findAddressResult", targetNamespace = "http://webservices.maplink2.com.br")
    @RequestWrapper(localName = "findAddress", targetNamespace = "http://webservices.maplink2.com.br", className = "br.com.maplink2.webservices.FindAddress")
    @WebMethod(action = "http://webservices.maplink2.com.br/findAddress")
    @ResponseWrapper(localName = "findAddressResponse", targetNamespace = "http://webservices.maplink2.com.br", className = "br.com.maplink2.webservices.FindAddressResponse")
    public br.com.maplink2.webservices.AddressInfo findAddress(
        @WebParam(name = "address", targetNamespace = "http://webservices.maplink2.com.br")
        br.com.maplink2.webservices.Address address,
        @WebParam(name = "ao", targetNamespace = "http://webservices.maplink2.com.br")
        br.com.maplink2.webservices.AddressOptions ao,
        @WebParam(name = "token", targetNamespace = "http://webservices.maplink2.com.br")
        java.lang.String token
    );

    /**
     * Devolve uma lista contendo dados da cidade informada.
     */
    @WebResult(name = "findCityResult", targetNamespace = "http://webservices.maplink2.com.br")
    @RequestWrapper(localName = "findCity", targetNamespace = "http://webservices.maplink2.com.br", className = "br.com.maplink2.webservices.FindCity")
    @WebMethod(action = "http://webservices.maplink2.com.br/findCity")
    @ResponseWrapper(localName = "findCityResponse", targetNamespace = "http://webservices.maplink2.com.br", className = "br.com.maplink2.webservices.FindCityResponse")
    public br.com.maplink2.webservices.CityLocationInfo findCity(
        @WebParam(name = "cidade", targetNamespace = "http://webservices.maplink2.com.br")
        br.com.maplink2.webservices.City cidade,
        @WebParam(name = "ao", targetNamespace = "http://webservices.maplink2.com.br")
        br.com.maplink2.webservices.AddressOptions ao,
        @WebParam(name = "token", targetNamespace = "http://webservices.maplink2.com.br")
        java.lang.String token
    );
}
